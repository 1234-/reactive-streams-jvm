package org.reactivestreams.tck.support;

/**
 * Internal TCK use only.
 * Add / Remove tests for PublisherVerificaSubscriberWhiteboxVerification here to make sure that they arre added/removed in the other places.
 */
public interface SubscriberWhiteboxVerificationRules {
  void required___exerciseWhiteboxHappyPath() throws Throwable;
  void required___spec201_mustSignalDemandViaSubscriptionRequest() throws Throwable;
  void unverified___spec202_shouldAsynchronouslyDispatch() throws Exception;
  void required___spec203_mustNotCallMethodsOnSubscriptionOrPublisherInOnComplete() throws Throwable;
  void required___spec203_mustNotCallMethodsOnSubscriptionOrPublisherInOnError() throws Throwable;
  void unverified___spec204_mustConsiderTheSubscriptionAsCancelledInAfterRecievingOnCompleteOrOnError() throws Exception;
  void required___spec205_mustCallSubscriptionCancelIfItAlreadyHasAnSubscriptionAndReceivesAnotherOnSubscribeSignal() throws Exception;
  void unverified___spec206_mustCallSubscriptionCancelIfItIsNoLongerValid() throws Exception;
  void unverified___spec207_mustEnsureAllCallsOnItsSubscriptionTakePlaceFromTheSameThreadOrTakeCareOfSynchronization() throws Exception;
  void required___spec208_mustBePreparedToReceiveOnNextSignalsAfterHavingCalledSubscriptionCancel() throws Throwable;
  void required___spec209_mustBePreparedToReceiveAnOnCompleteSignalWithPrecedingRequestCall() throws Throwable;
  void required___spec209_mustBePreparedToReceiveAnOnCompleteSignalWithoutPrecedingRequestCall() throws Throwable;
  void required___spec210_mustBePreparedToReceiveAnOnErrorSignalWithPrecedingRequestCall() throws Throwable;
  void required___spec210_mustBePreparedToReceiveAnOnErrorSignalWithoutPrecedingRequestCall() throws Throwable;
  void unverified___spec211_mustMakeSureThatAllCallsOnItsMethodsHappenBeforeTheProcessingOfTheRespectiveEvents() throws Exception;
  void optional___spec212_mustNotCallOnSubscribeMoreThanOnceBasedOnObjectEquality_specViolation() throws Throwable;
  void unverified___spec213_failingOnSignalInvocation() throws Exception;
  void unverified___spec301_mustNotBeCalledOutsideSubscriberContext() throws Exception;
  void required___spec308_requestMustRegisterGivenNumberElementsToBeProduced() throws Throwable;
  void unverified___spec310_requestMaySynchronouslyCallOnNextOnSubscriber() throws Exception;
  void unverified___spec311_requestMaySynchronouslyCallOnCompleteOrOnError() throws Exception;
  void unverified___spec314_cancelMayCauseThePublisherToShutdownIfNoOtherSubscriptionExists() throws Exception;
  void unverified___spec315_cancelMustNotThrowExceptionAndMustSignalOnError() throws Exception;
  void unverified___spec316_requestMustNotThrowExceptionAndMustOnErrorTheSubscriber() throws Exception;
}